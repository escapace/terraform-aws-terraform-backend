assert_lefthook_installed: true
colors: false
source_dir: scripts/

output:
  - summary
  - failure
  - execution

commit-msg:
  commands:
    'lint commit message':
      run: pnpm exec commitlint --edit {1}

pre-commit:
  skip:
    - merge
    - rebase

  commands:
    ls-lint:
      priority: 1
      run: pnpm run ls-lint

    syncpack:
      glob: '{package.json,**/package.json,pnpm-lock.yaml}'
      priority: 2
      run: pnpm run syncpack
      stage_fixed: true

    pnpm-install:
      glob: '{package.json,**/package.json,pnpm-lock.yaml,*.tf,*.tf.json,*.tfvars,*.tfvars.json}'
      priority: 3
      run: pnpm install --ignore-scripts && terraform init -backend=false --lockfile=readonly && tflint --init
      stage_fixed: true

    eslint:
      exclude: '(^|/)(pnpm-lock\.yaml)$'
      glob: '*.{js,mjs,cjs,ts,mts,cts,yml,yaml,json,toml}'
      priority: 4
      run: pnpm exec eslint --no-warn-ignored --fix {staged_files}
      stage_fixed: true

    prettier:
      exclude: '(^|/)(pnpm-lock\.yaml|README.md)$'
      glob: '*.{js,mjs,cjs,ts,mts,cts,yml,yaml,json,md}'
      priority: 5
      run: pnpm exec prettier --write {staged_files}
      stage_fixed: true

    typecheck:
      glob: '*.{tf,tf.json,tfvars,tfvars.json}'
      priority: 6
      run: pnpm run typecheck
      stage_fixed: true

    format:
      glob: '*.{tf,tftest.hcl,tfvars}'
      priority: 7
      run: terraform fmt {staged_files}
      stage_fixed: true

    tflint:
      glob: '*.{tf,tf.json,tfvars,tfvars.json}'
      priority: 8
      run: pnpm run tflint
      stage_fixed: true

    trivy:
      glob: '*.{tf,tf.json,tfvars,tfvars.json}'
      priority: 8
      run: pnpm run trivy
      stage_fixed: true

    docs:
      glob: '{README.md,*.tf,*.tf.json,*.tfvars,*.tfvars.json}'
      priority: 9
      run: pnpm run docs
      stage_fixed: true
